// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using daylily.Plugins.Osu.Data;

#nullable disable

namespace daylily.Migrations
{
    [DbContext(typeof(OsuDbContext))]
    [Migration("20220316084525_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("daylily.Plugins.Osu.Data.BeatmapScan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<int>("BeatmapSetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mapper")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BeatmapSetId")
                        .IsUnique();

                    b.ToTable("BeatmapScans");
                });

            modelBuilder.Entity("daylily.Plugins.Osu.Data.BeatmapStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeatmapScanId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("FavoriteCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BeatmapScanId");

                    b.ToTable("BeatmapStats");
                });

            modelBuilder.Entity("daylily.Plugins.Osu.Data.BeatmapSubscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BeatmapScanId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ScribeUserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BeatmapScanId");

                    b.HasIndex("ScribeUserId", "BeatmapScanId")
                        .IsUnique();

                    b.ToTable("BeatmapSubscribes");
                });

            modelBuilder.Entity("daylily.Plugins.Osu.Data.OsuToken", b =>
                {
                    b.Property<string>("SourceId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("CreateTime")
                        .HasColumnType("TEXT");

                    b.Property<long>("ExpiresIn")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SourceId");

                    b.ToTable("tokens");
                });

            modelBuilder.Entity("daylily.Plugins.Osu.Data.OsuUserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Group")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModeIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestLink")
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestStatus")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPageText")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OsuUserInfos");
                });

            modelBuilder.Entity("daylily.Plugins.Osu.Data.BeatmapStat", b =>
                {
                    b.HasOne("daylily.Plugins.Osu.Data.BeatmapScan", "BeatmapScan")
                        .WithMany("BeatmapStats")
                        .HasForeignKey("BeatmapScanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeatmapScan");
                });

            modelBuilder.Entity("daylily.Plugins.Osu.Data.BeatmapSubscribe", b =>
                {
                    b.HasOne("daylily.Plugins.Osu.Data.BeatmapScan", "BeatmapScan")
                        .WithMany("BeatmapSubscribes")
                        .HasForeignKey("BeatmapScanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BeatmapScan");
                });

            modelBuilder.Entity("daylily.Plugins.Osu.Data.BeatmapScan", b =>
                {
                    b.Navigation("BeatmapStats");

                    b.Navigation("BeatmapSubscribes");
                });
#pragma warning restore 612, 618
        }
    }
}
